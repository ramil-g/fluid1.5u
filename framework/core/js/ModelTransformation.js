var fluid_1_5=fluid_1_5||{};var fluid=fluid||fluid_1_5;(function($){fluid.registerNamespace("fluid.model.transform");fluid.defaults("fluid.transformFunction",{gradeNames:"fluid.function"});fluid.defaults("fluid.standardInputTransformFunction",{gradeNames:"fluid.transformFunction"});fluid.defaults("fluid.standardOutputTransformFunction",{gradeNames:"fluid.transformFunction"});fluid.defaults("fluid.multiInputTransformFunction",{gradeNames:"fluid.transformFunction"});fluid.defaults("fluid.standardTransformFunction",{gradeNames:["fluid.standardInputTransformFunction","fluid.standardOutputTransformFunction"]});fluid.defaults("fluid.lens",{gradeNames:"fluid.transformFunction",invertConfiguration:null});fluid.model.transform.pathToRule=function(inputPath){return{expander:{type:"fluid.model.transform.value",inputPath:inputPath}}};fluid.model.transform.valueToRule=function(value){return{expander:{type:"fluid.model.transform.literalValue",value:value}}};fluid.model.composePaths=function(prefix,suffix){prefix=prefix||"";suffix=suffix||"";return !prefix?suffix:(!suffix?prefix:prefix+"."+suffix)};fluid.model.transform.accumulateInputPath=function(inputPath,expander,paths){if(inputPath!==undefined){paths.push(fluid.model.composePaths(expander.inputPrefix,inputPath))}};fluid.model.transform.accumulateStandardInputPath=function(input,expandSpec,expander,paths){fluid.model.transform.getValue(undefined,expandSpec[input],expander);fluid.model.transform.accumulateInputPath(expandSpec[input+"Path"],expander,paths)};fluid.model.transform.accumulateMultiInputPaths=function(inputVariables,expandSpec,expander,paths){fluid.each(inputVariables,function(v,k){fluid.model.transform.accumulateStandardInputPath(k,expandSpec,expander,paths)})};fluid.model.transform.getValue=function(inputPath,value,expander){var togo;if(inputPath!==undefined){togo=fluid.get(expander.source,fluid.model.composePaths(expander.inputPrefix,inputPath),expander.resolverGetConfig)}if(togo===undefined){togo=fluid.isPrimitive(value)?value:expander.expand(value)}return togo};fluid.model.transform.NONDEFAULT_OUTPUT_PATH_RETURN={};fluid.model.transform.setValue=function(userOutputPath,value,expander,merge){var toset=fluid.copy(value);var outputPath=fluid.model.composePaths(expander.outputPrefix,userOutputPath);if(toset!==undefined){expander.applier.requestChange(outputPath,toset,merge?"MERGE":undefined)}return userOutputPath?fluid.model.transform.NONDEFAULT_OUTPUT_PATH_RETURN:toset};fluid.model.transform.resolveParam=function(expandSpec,expander,key,def){var val=fluid.model.transform.getValue(expandSpec[key+"Path"],expandSpec[key],expander);return(val!==undefined)?val:def};fluid.deepEquals=function(expected,actual,stats){if(fluid.isPrimitive(expected)){if(expected===actual){++stats.matchCount}else{++stats.mismatchCount;stats.messages.push("Value mismatch at path "+stats.path+": expected "+expected+" actual "+actual)}}else{if(typeof (expected)!==typeof (actual)){++stats.mismatchCount;stats.messages.push("Type mismatch at path "+stats.path+": expected "+typeof (expected)+" actual "+typeof (actual))}else{fluid.each(expected,function(value,key){stats.pathOps.push(key);fluid.deepEquals(expected[key],actual[key],stats);stats.pathOps.pop(key)})}}};fluid.model.transform.matchValue=function(expected,actual){if(fluid.isPrimitive(expected)){return expected===actual?1:0}else{var stats={matchCount:0,mismatchCount:0,messages:[]};fluid.model.makePathStack(stats,"path");fluid.deepEquals(expected,actual,stats);return stats.matchCount}};fluid.model.transform.compareMatches=function(speca,specb){return specb.matchCount-speca.matchCount};fluid.firstDefined=function(a,b){return a===undefined?b:a};fluid.model.transform.prefixApplier=function(expandSpec,expander){if(expandSpec.inputPrefix){expander.inputPrefixOp.push(expandSpec.inputPrefix)}if(expandSpec.outputPrefix){expander.outputPrefixOp.push(expandSpec.outputPrefix)}expander.expand(expandSpec.value);if(expandSpec.inputPrefix){expander.inputPrefixOp.pop()}if(expandSpec.outputPrefix){expander.outputPrefixOp.pop()}};fluid.defaults("fluid.model.transform.prefixApplier",{gradeNames:["fluid.transformFunction"]});fluid.model.makePathStack=function(expander,prefixName){var stack=expander[prefixName+"Stack"]=[];expander[prefixName]="";return{push:function(prefix){var newPath=fluid.model.composePaths(expander[prefixName],prefix);stack.push(expander[prefixName]);expander[prefixName]=newPath},pop:function(){expander[prefixName]=stack.pop()}}};fluid.model.transform.expandExpander=function(expandSpec,expander){var typeName=expandSpec.type;if(!typeName){fluid.fail("Transformation record is missing a type name: ",expandSpec)}if(typeName.indexOf(".")===-1){typeName="fluid.model.transform."+typeName}var expanderFn=fluid.getGlobalValue(typeName);var expdef=fluid.defaults(typeName);if(typeof (expanderFn)!=="function"){fluid.fail("Transformation record specifies transformation function with name "+expandSpec.type+" which is not a function - ",expanderFn)}if(!fluid.hasGrade(expdef,"fluid.transformFunction")){expdef=fluid.defaults("fluid.standardTransformFunction")}var expanderArgs=[expandSpec,expander];if(fluid.hasGrade(expdef,"fluid.standardInputTransformFunction")){if(expandSpec.input!==undefined){expandSpec.value=expandSpec.input}var expanded=fluid.model.transform.getValue(expandSpec.inputPath,expandSpec.value,expander);expanderArgs.unshift(expanded)}else{if(fluid.hasGrade(expdef,"fluid.multiInputTransformFunction")){var inputs={};fluid.each(expdef.inputVariables,function(v,k){var input=fluid.model.transform.getValue(expandSpec[k+"Path"],expandSpec[k],expander);inputs[k]=(input!==undefined)?input:v});expanderArgs.unshift(inputs)}}var transformed=expanderFn.apply(null,expanderArgs);if(fluid.hasGrade(expdef,"fluid.standardOutputTransformFunction")){transformed=fluid.model.transform.setValue(expandSpec.outputPath,transformed,expander,expandSpec.merge)}return transformed};fluid.model.transform.expandWildcards=function(expander,source){fluid.each(source,function(value,key){var q=expander.queuedExpanders;expander.pathOp.push(fluid.pathUtil.escapeSegment(key.toString()));for(var i=0;i<q.length;++i){if(fluid.pathUtil.matchPath(q[i].matchPath,expander.path,true)){var esCopy=fluid.copy(q[i].expandSpec);if(esCopy.inputPath===undefined||fluid.model.transform.hasWildcard(esCopy.inputPath)){esCopy.inputPath=""}expander.inputPrefixOp.push(expander.path);expander.outputPrefixOp.push(expander.path);fluid.model.transform.expandExpander(esCopy,expander);expander.outputPrefixOp.pop();expander.inputPrefixOp.pop()}}if(!fluid.isPrimitive(value)){fluid.model.transform.expandWildcards(expander,value)}expander.pathOp.pop()})};fluid.model.transform.hasWildcard=function(path){return typeof (path)==="string"&&path.indexOf("*")!==-1};fluid.model.transform.maybePushWildcard=function(expandSpec,expander){var hw=fluid.model.transform.hasWildcard;var matchPath;if(hw(expandSpec.inputPath)){matchPath=fluid.model.composePaths(expander.inputPrefix,expandSpec.inputPath)}else{if(hw(expander.outputPrefix)||hw(expandSpec.outputPath)){matchPath=fluid.model.composePaths(expander.outputPrefix,expandSpec.outputPath)}}if(matchPath){expander.queuedExpanders.push({expandSpec:expandSpec,outputPrefix:expander.outputPrefix,inputPrefix:expander.inputPrefix,matchPath:matchPath});return true}return false};fluid.model.sortByKeyLength=function(inObject){var keys=fluid.keys(inObject);return keys.sort(fluid.compareStringLength(true))};fluid.model.transform.handleExpandExpander=function(expandSpec,expander){if(fluid.model.transform.maybePushWildcard(expandSpec,expander)){return }else{return fluid.model.transform.expandExpander(expandSpec,expander)}};fluid.model.transform.handleInvertExpander=function(expandSpec,expander,expdef){var invertor=expdef.invertConfiguration;if(invertor){var inverted=fluid.invokeGlobalFunction(invertor,[expandSpec,expander]);expander.inverted.push(inverted)}};fluid.model.transform.handlerCollectExpander=function(expandSpec,expander,expdef){var standardInput=fluid.hasGrade(expdef,"fluid.standardInputTransformFunction");var multiInput=fluid.hasGrade(expdef,"fluid.multiInputTransformFunction");if(standardInput){fluid.model.transform.accumulateStandardInputPath("input",expandSpec,expander,expander.inputPaths)}else{if(multiInput){fluid.model.transform.accumulateMultiInputPaths(expdef.inputVariables,expandSpec,expander,expander.inputPaths)}else{var collector=expdef.collectInputPaths;if(collector){var collected=fluid.makeArray(fluid.invokeGlobalFunction(collector,[expandSpec,expander]));expander.inputPaths=expander.inputPaths.concat(collected)}}}};fluid.model.transform.expandValue=function(rule,expander){if(typeof (rule)==="string"){rule=fluid.model.transform.pathToRule(rule)}else{if(rule.value&&expander.outputPrefix!==""){rule=fluid.model.transform.valueToRule(rule.value)}}var togo;if(rule.expander){var expanders=fluid.makeArray(rule.expander);for(var i=0;i<expanders.length;++i){var expandSpec=expanders[i];var expdef=fluid.defaults(expandSpec.type);var returned=expander.expanderHandler(expandSpec,expander,expdef);if(returned!==undefined){togo=returned}}}fluid.each(rule,function(value,key){if(key!=="expander"){expander.outputPrefixOp.push(key);var result=expander.expand(value,expander);expander.outputPrefixOp.pop()}});return togo};fluid.model.transform.makeExpander=function(expander,handleFn,expandFn){expandFn=expandFn||fluid.model.transform.expandValue;expander.expand=function(rules){return expandFn(rules,expander)};expander.outputPrefixOp=fluid.model.makePathStack(expander,"outputPrefix");expander.inputPrefixOp=fluid.model.makePathStack(expander,"inputPrefix");expander.expanderHandler=handleFn};fluid.model.transform.invertConfiguration=function(rules){var expander={inverted:[]};fluid.model.transform.makeExpander(expander,fluid.model.transform.handleInvertExpander);expander.expand(rules);return{expander:expander.inverted}};fluid.model.transform.collectInputPaths=function(rules){var expander={inputPaths:[]};fluid.model.transform.makeExpander(expander,fluid.model.transform.handlerCollectExpander);expander.expand(rules);return expander.inputPaths};fluid.model.transform.flatSchemaStrategy=function(flatSchema){var keys=fluid.model.sortByKeyLength(flatSchema);return function(root,segment,index,segs){var path=fluid.path.apply(null,segs.slice(0,index));for(var i=0;i<keys.length;++i){var key=keys[i];if(fluid.pathUtil.matchPath(key,path,true)!==null){return flatSchema[key]}}}};fluid.model.transform.defaultSchemaValue=function(schemaValue){var type=fluid.isPrimitive(schemaValue)?schemaValue:schemaValue.type;return type==="array"?[]:{}};fluid.model.transform.isomorphicSchemaStrategy=function(source,getConfig){return function(root,segment,index,segs){var existing=fluid.get(source,segs.slice(0,index),getConfig);return fluid.isArrayable(existing)?"array":"object"}};fluid.model.transform.decodeStrategy=function(source,options,getConfig){if(options.isomorphic){return fluid.model.transform.isomorphicSchemaStrategy(source,getConfig)}else{if(options.flatSchema){return fluid.model.transform.flatSchemaStrategy(options.flatSchema,getConfig)}}};fluid.model.transform.schemaToCreatorStrategy=function(strategy){return function(root,segment,index,segs){if(root[segment]===undefined){var schemaValue=strategy(root,segment,index,segs);return root[segment]=fluid.model.transform.defaultSchemaValue(schemaValue)}}};fluid.model.transform.sequence=function(source,rules,options){for(var i=0;i<rules.length;++i){source=fluid.model.transform(source,rules[i],options)}return source};fluid.model.compareByPathLength=function(changea,changeb){var pdiff=changea.path.length-changeb.path.length;return pdiff===0?changea.sequence-changeb.sequence:pdiff};fluid.model.fireSortedChanges=function(changes,applier){changes.sort(fluid.model.compareByPathLength);fluid.requestChanges(applier,changes)};fluid.model.transformWithRules=function(source,rules,options){options=options||{};var getConfig=fluid.model.escapedGetConfig;var schemaStrategy=fluid.model.transform.decodeStrategy(source,options,getConfig);var setConfig=fluid.copy(fluid.model.escapedSetConfig);setConfig.strategies=[fluid.model.defaultFetchStrategy,schemaStrategy?fluid.model.transform.schemaToCreatorStrategy(schemaStrategy):fluid.model.defaultCreatorStrategy];var expander={source:source,target:schemaStrategy?fluid.model.transform.defaultSchemaValue(schemaStrategy(null,"",0,[""])):{},resolverGetConfig:getConfig,queuedChanges:[],queuedExpanders:[]};fluid.model.transform.makeExpander(expander,fluid.model.transform.handleExpandExpander);expander.applier={fireChangeRequest:function(changeRequest){changeRequest.sequence=expander.queuedChanges.length;expander.queuedChanges.push(changeRequest)}};fluid.bindRequestChange(expander.applier);expander.finalApplier=fluid.makeChangeApplier(expander.target,{resolverSetConfig:setConfig});expander.expand(rules);if(expander.queuedExpanders.length>0){expander.typeStack=[];expander.pathOp=fluid.model.makePathStack(expander,"path");fluid.model.transform.expandWildcards(expander,source)}fluid.model.fireSortedChanges(expander.queuedChanges,expander.finalApplier);return expander.target};$.extend(fluid.model.transformWithRules,fluid.model.transform);fluid.model.transform=fluid.model.transformWithRules;fluid.transformOne=function(rules){return{transformOptions:{transformer:"fluid.model.transformWithRules",config:rules}}};fluid.transformMany=function(rules){return{transformOptions:{transformer:"fluid.model.transform.sequence",config:rules}}}})(jQuery,fluid_1_5);