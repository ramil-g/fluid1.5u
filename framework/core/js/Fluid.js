/*
 * Fluid Infusion v1.5
 *
 * Infusion is distributed under the Educational Community License 2.0 and new BSD licenses: 
 * http://wiki.fluidproject.org/display/fluid/Fluid+Licensing
 *
 * For information on copyright, see the individual Infusion source code files: 
 * https://github.com/fluid-project/infusion/
 */
var fluid_1_5=fluid_1_5||{};var fluid=fluid||fluid_1_5;(function($,fluid){fluid.version="Infusion 1.5";fluid.Error=Error;fluid.environment={fluid:fluid};var globalObject=window||{};fluid.activityTracing=false;fluid.activityTrace=[];var activityParser=/(%\w+)/g;fluid.renderOneActivity=function(activity,nowhile){var togo=nowhile===true?[]:["    while "];var message=activity.message;var index=activityParser.lastIndex=0;while(true){var match=activityParser.exec(message);if(match){var key=match[1].substring(1);togo.push(message.substring(index,match.index));togo.push(activity.args[key]);index=activityParser.lastIndex}else{break}}if(index<message.length){togo.push(message.substring(index))}return togo};fluid.renderActivity=function(activityStack,renderer){renderer=renderer||fluid.renderOneActivity;return fluid.transform(activityStack,renderer)};fluid.getActivityStack=function(){var root=fluid.globalThreadLocal();if(!root.activityStack){root.activityStack=[]}return root.activityStack};fluid.describeActivity=fluid.getActivityStack;fluid.logActivity=function(activity){activity=activity||fluid.describeActivity();var rendered=fluid.renderActivity(activity).reverse();fluid.log("Current activity: ");fluid.each(rendered,function(args){fluid.doLog(args)})};fluid.pushActivity=function(type,message,args){var record={type:type,message:message,args:args,time:new Date().getTime()};if(fluid.activityTracing){fluid.activityTrace.push(record)}if(fluid.passLogLevel(fluid.logLevel.TRACE)){fluid.doLog(fluid.renderOneActivity(record,true))}var activityStack=fluid.getActivityStack();activityStack.push(record)};fluid.popActivity=function(popframes){popframes=popframes||1;if(fluid.activityTracing){fluid.activityTrace.push({pop:popframes})}var activityStack=fluid.getActivityStack();var popped=activityStack.length-popframes;activityStack.length=popped<0?0:popped};fluid.FluidError=function(message){this.message=message;this.stack=new Error().stack};fluid.FluidError.prototype=new Error();fluid.builtinFail=function(soft,args,activity){fluid.log.apply(null,[fluid.logLevel.FAIL,"ASSERTION FAILED: "].concat(args));fluid.logActivity(activity);var message=args.join("");if(soft){throw new fluid.FluidError(message)}else{message["Assertion failure - check console for details"]()}};var softFailure=[false];fluid.fail=function(message){var args=fluid.makeArray(arguments);var activity=fluid.makeArray(fluid.describeActivity());fluid.popActivity(activity.length);var topFailure=softFailure[0];if(typeof (topFailure)==="boolean"){fluid.builtinFail(topFailure,args,activity)}else{if(typeof (topFailure)==="function"){topFailure(args,activity)}}};fluid.pushSoftFailure=function(condition){if(typeof (condition)==="boolean"||typeof (condition)==="function"){softFailure.unshift(condition)}else{if(condition===-1){softFailure.shift()}}};fluid.notrycatch=true;fluid.tryCatch=function(tryfun,catchfun,finallyfun){finallyfun=finallyfun||fluid.identity;if(fluid.notrycatch){var togo=tryfun();finallyfun();return togo}else{try{return tryfun()}catch(e){if(catchfun){catchfun(e)}else{throw (e)}}finally{finallyfun()}}};fluid.expect=function(name,members,target){fluid.transform(fluid.makeArray(members),function(key){if(typeof target[key]==="undefined"){fluid.fail(name+" missing required parameter "+key)}})};fluid.isLogging=function(){return logLevelStack[0].priority>fluid.logLevel.IMPORTANT.priority};fluid.isLogLevel=function(arg){return fluid.isMarker(arg)&&arg.priority!==undefined};fluid.passLogLevel=function(testLogLevel){return testLogLevel.priority<=logLevelStack[0].priority};fluid.setLogging=function(enabled){var logLevel;if(typeof enabled==="boolean"){logLevel=fluid.logLevel[enabled?"INFO":"IMPORTANT"]}else{if(fluid.isLogLevel(enabled)){logLevel=enabled}else{fluid.fail("Unrecognised fluid logging level ",enabled)}}logLevelStack.unshift(logLevel)};fluid.setLogLevel=fluid.setLogging;fluid.popLogging=function(){return logLevelStack.length===1?logLevelStack[0]:logLevelStack.shift()};fluid.doLog=function(args){var str=args.join("");if(typeof (console)!=="undefined"){if(console.debug){console.debug.apply(console,args)}else{if(typeof (console.log)==="function"){console.log.apply(console,args)}else{console.log(str)}}}else{if(typeof (YAHOO)!=="undefined"){YAHOO.log(str)}else{if(typeof (opera)!=="undefined"){opera.postError(str)}}}};fluid.log=function(message){var directArgs=fluid.makeArray(arguments);var userLogLevel=fluid.logLevel.INFO;if(fluid.isLogLevel(directArgs[0])){userLogLevel=directArgs.shift()}if(fluid.passLogLevel(userLogLevel)){var arg0=fluid.renderTimestamp(new Date())+":  ";var args=[arg0].concat(directArgs);fluid.doLog(args)}};fluid.identity=function(arg){return arg};fluid.isValue=function(value){return value!==undefined&&value!==null};fluid.isPrimitive=function(value){var valueType=typeof (value);return !value||valueType==="string"||valueType==="boolean"||valueType==="number"||valueType==="function"};fluid.isArrayable=function(totest){return totest&&(totest.jquery||Object.prototype.toString.call(totest)==="[object Array]")};fluid.isDOMNode=function(obj){return obj&&typeof (obj.nodeType)==="number"};fluid.isDOMish=function(obj){return fluid.isDOMNode(obj)||obj.jquery};fluid.freshContainer=function(tocopy){return fluid.isArrayable(tocopy)?[]:{}};fluid.copy=function(tocopy){if(fluid.isPrimitive(tocopy)){return tocopy}return $.extend(true,fluid.freshContainer(tocopy),tocopy)};fluid.makeArray=function(arg){var togo=[];if(arg!==null&&arg!==undefined){if(fluid.isPrimitive(arg)||typeof (arg.length)!=="number"){togo.push(arg)}else{for(var i=0;i<arg.length;++i){togo[i]=arg[i]}}}return togo};function transformInternal(source,togo,key,args){var transit=source[key];for(var j=0;j<args.length-1;++j){transit=args[j+1](transit,key)}togo[key]=transit}fluid.transform=function(source){var togo=fluid.freshContainer(source);if(fluid.isArrayable(source)){for(var i=0;i<source.length;++i){transformInternal(source,togo,i,arguments)}}else{for(var key in source){transformInternal(source,togo,key,arguments)}}return togo};fluid.each=function(source,func){if(fluid.isArrayable(source)){for(var i=0;i<source.length;++i){func(source[i],i)}}else{for(var key in source){func(source[key],key)}}};fluid.make_find=function(find_if){var target=find_if?false:undefined;return function(source,func,deffolt){var disp;if(fluid.isArrayable(source)){for(var i=0;i<source.length;++i){disp=func(source[i],i);if(disp!==target){return find_if?source[i]:disp}}}else{for(var key in source){disp=func(source[key],key);if(disp!==target){return find_if?source[key]:disp}}}return deffolt}};fluid.find=fluid.make_find(false);fluid.find_if=fluid.make_find(true);fluid.accumulate=function(list,fn,arg){for(var i=0;i<list.length;++i){arg=fn(list[i],arg,i)}return arg};fluid.remove_if=function(source,fn,target){if(fluid.isArrayable(source)){for(var i=0;i<source.length;++i){if(fn(source[i],i)){if(target){target.push(source[i])}source.splice(i,1);--i}}}else{for(var key in source){if(fn(source[key],key)){if(target){target[key]=source[key]}delete source[key]}}}return target||source};fluid.generate=function(n,generator,applyFunc){var togo=[];for(var i=0;i<n;++i){togo[i]=applyFunc?generator(i):generator}return togo};fluid.filterKeys=function(toFilter,keys,exclude){return fluid.remove_if($.extend({},toFilter),function(value,key){return exclude^($.inArray(key,keys)===-1)})};fluid.censorKeys=function(toCensor,keys){return fluid.filterKeys(toCensor,keys,true)};fluid.makeFlatten=function(index){return function(obj){var togo=[];fluid.each(obj,function(){togo.push(arguments[index])});return togo}};fluid.keys=fluid.makeFlatten(1);fluid.values=fluid.makeFlatten(0);fluid.contains=function(obj,value){return obj?fluid.find(obj,function(thisValue){if(value===thisValue){return true}}):undefined};fluid.keyForValue=function(obj,value){return fluid.find(obj,function(thisValue,key){if(value===thisValue){return key}})};fluid.findKeyInObject=fluid.keyForValue;fluid.arrayToHash=function(array){var togo={};fluid.each(array,function(el){togo[el]=true});return togo};fluid.clear=function(target){if(fluid.isArrayable(target)){target.length=0}else{for(var i in target){delete target[i]}}};fluid.compareStringLength=function(ascending){return ascending?function(a,b){return a.length-b.length}:function(a,b){return b.length-a.length}};fluid.logLevelsSpec={FATAL:0,FAIL:5,WARN:10,IMPORTANT:12,INFO:15,TRACE:20};fluid.logLevel=fluid.transform(fluid.logLevelsSpec,function(value,key){return{type:"fluid.marker",value:key,priority:value}});var logLevelStack=[fluid.logLevel.IMPORTANT];fluid.VALUE={type:"fluid.marker",value:"VALUE"};fluid.NO_VALUE={type:"fluid.marker",value:"NO_VALUE"};fluid.EXPAND={type:"fluid.marker",value:"EXPAND"};fluid.EXPAND_NOW={type:"fluid.marker",value:"EXPAND_NOW"};fluid.isMarker=function(totest,type){if(!totest||typeof (totest)!=="object"||totest.type!=="fluid.marker"){return false}if(!type){return true}return totest===type};fluid.model={};fluid.model.copyModel=function(target,source){fluid.clear(target);$.extend(true,target,source)};fluid.model.parseEL=function(EL){return EL===""?[]:String(EL).split(".")};fluid.model.composePath=function(prefix,suffix){return prefix===""?suffix:(suffix===""?prefix:prefix+"."+suffix)};fluid.model.composeSegments=function(){return fluid.makeArray(arguments).join(".")};fluid.path=fluid.model.composeSegments;fluid.composePath=fluid.model.composePath;fluid.requireDataBinding=function(){fluid.fail("Please include DataBinding.js in order to operate complex model accessor configuration")};fluid.model.setWithStrategy=fluid.model.getWithStrategy=fluid.requireDataBinding;fluid.model.resolvePathSegment=function(root,segment,create,origEnv){if(!origEnv&&root.resolvePathSegment){return root.resolvePathSegment(segment)}if(create&&root[segment]===undefined){return root[segment]={}}return root[segment]};fluid.model.pathToSegments=function(EL,config){var parser=config&&config.parser?config.parser.parse:fluid.model.parseEL;var segs=typeof (EL)==="number"||typeof (EL)==="string"?parser(EL):EL;return segs};fluid.model.accessImpl=function(root,EL,newValue,config,initSegs,returnSegs,traverser){var segs=fluid.model.pathToSegments(EL,config);var initPos=0;if(initSegs){initPos=initSegs.length;segs=initSegs.concat(segs)}var uncess=newValue===fluid.NO_VALUE?0:1;var root=traverser(root,segs,initPos,config,uncess);if(newValue===fluid.NO_VALUE||newValue===fluid.VALUE){return returnSegs?{root:root,segs:segs}:root}else{root[segs[segs.length-1]]=newValue}};fluid.model.accessSimple=function(root,EL,newValue,environment,initSegs,returnSegs){return fluid.model.accessImpl(root,EL,newValue,environment,initSegs,returnSegs,fluid.model.traverseSimple)};fluid.model.traverseSimple=function(root,segs,initPos,environment,uncess){var origEnv=environment;var limit=segs.length-uncess;for(var i=0;i<limit;++i){if(!root){return root}var segment=segs[i];if(environment&&environment[segment]){root=environment[segment]}else{root=fluid.model.resolvePathSegment(root,segment,uncess===1,origEnv)}environment=null}return root};fluid.model.setSimple=function(root,EL,newValue,environment,initSegs){fluid.model.accessSimple(root,EL,newValue,environment,initSegs,false)};fluid.model.getSimple=function(root,EL,environment,initSegs){if(EL===null||EL===undefined||EL.length===0){return root}return fluid.model.accessSimple(root,EL,fluid.NO_VALUE,environment,initSegs,false)};fluid.decodeAccessorArg=function(arg3){return(!arg3||arg3===fluid.model.defaultGetConfig||arg3===fluid.model.defaultSetConfig)?null:(arg3.type==="environment"?arg3.value:undefined)};fluid.set=function(root,EL,newValue,config,initSegs){var env=fluid.decodeAccessorArg(config);if(env===undefined){fluid.model.setWithStrategy(root,EL,newValue,config,initSegs)}else{fluid.model.setSimple(root,EL,newValue,env,initSegs)}};fluid.get=function(root,EL,config,initSegs){var env=fluid.decodeAccessorArg(config);return env===undefined?fluid.model.getWithStrategy(root,EL,config,initSegs):fluid.model.accessImpl(root,EL,fluid.NO_VALUE,env,null,false,fluid.model.traverseSimple)};fluid.model.setBeanValue=fluid.set;fluid.model.getBeanValue=fluid.get;fluid.getGlobalValue=function(path,env){if(path){env=env||fluid.environment;return fluid.get(globalObject,path,{type:"environment",value:env})}};fluid.bind=function(obj,fnName,args){return obj[fnName].apply(obj,fluid.makeArray(args))};fluid.invokeGlobalFunction=function(functionPath,args,environment){var func=fluid.getGlobalValue(functionPath,environment);if(!func){fluid.fail("Error invoking global function: "+functionPath+" could not be located")}else{return func.apply(null,args||[])}};fluid.registerGlobalFunction=function(functionPath,func,env){env=env||fluid.environment;fluid.set(globalObject,functionPath,func,{type:"environment",value:env})};fluid.setGlobalValue=fluid.registerGlobalFunction;fluid.registerNamespace=function(naimspace,env){env=env||fluid.environment;var existing=fluid.getGlobalValue(naimspace,env);if(!existing){existing={};fluid.setGlobalValue(naimspace,existing,env)}return existing};fluid.dumpEl=fluid.identity;fluid.renderTimestamp=fluid.identity;fluid.registerNamespace("fluid.event");fluid.generateUniquePrefix=function(){return(Math.floor(Math.random()*1000000000000)).toString(36)+"-"};var fluid_prefix=fluid.generateUniquePrefix();var fluid_guid=1;fluid.allocateGuid=function(){return fluid_prefix+(fluid_guid++)};fluid.event.identifyListener=function(listener){if(!listener.$$fluid_guid){listener.$$fluid_guid=fluid.allocateGuid()}return listener.$$fluid_guid};fluid.event.impersonateListener=function(origListener,newListener){fluid.event.identifyListener(origListener);newListener.$$fluid_guid=origListener.$$fluid_guid};fluid.event.mapPriority=function(priority,count){return(priority===null||priority===undefined?count:(priority==="last"?Number.MAX_VALUE:(priority==="first"?-Number.MAX_VALUE:-priority)))};fluid.priorityComparator=function(recA,recB){return recA.priority-recB.priority};fluid.event.sortListeners=function(listeners){var togo=[];fluid.each(listeners,function(listener){togo.push(listener)});return togo.sort(fluid.priorityComparator)};fluid.event.resolveListener=function(listener){if(listener.globalName){var listenerFunc=fluid.getGlobalValue(listener.globalName);if(!listenerFunc){fluid.fail("Unable to look up name "+listener.globalName+" as a global function")}else{listener=listenerFunc}}return listener};fluid.nameComponent=function(that){return that?"component with typename "+that.typeName+" and id "+that.id:"[unknown component]"};fluid.event.nameEvent=function(that,eventName){return eventName+" of "+fluid.nameComponent(that)};fluid.makeEventFirer=function(unicast,preventable,name){var listeners;var byId;var sortedListeners;function fireToListeners(listeners,args,wrapper){if(!listeners){return }fluid.log("Firing event "+name+" to list of "+listeners.length+" listeners");for(var i=0;i<listeners.length;++i){var lisrec=listeners[i];lisrec.listener=fluid.event.resolveListener(lisrec.listener);var listener=lisrec.listener;if(lisrec.predicate&&!lisrec.predicate(listener,args)){continue}var value;var ret=(wrapper?wrapper(listener):listener).apply(null,args);if(preventable&&ret===false){value=false}if(unicast){value=ret}if(value!==undefined){return value}}}var identify=fluid.event.identifyListener;var that;var lazyInit=function(){listeners={};byId={};sortedListeners=[];that.addListener=function(listener,namespace,predicate,priority){if(!listener){return }if(unicast){namespace="unicast"}if(typeof (listener)==="string"){listener={globalName:listener}}var id=identify(listener);namespace=namespace||id;var record={listener:listener,predicate:predicate,namespace:namespace,priority:fluid.event.mapPriority(priority,sortedListeners.length)};listeners[namespace]=byId[id]=record;sortedListeners=fluid.event.sortListeners(listeners)};that.addListener.apply(null,arguments)};that={name:name,typeName:"fluid.event.firer",addListener:function(){lazyInit.apply(null,arguments)},removeListener:function(listener){if(!listeners){return }var namespace;if(typeof (listener)==="string"){namespace=listener;var record=listeners[listener];if(!record){return }listener=record.listener}var id=identify(listener);if(!id){fluid.fail("Cannot remove unregistered listener function ",listener," from event "+that.name)}namespace=namespace||(byId[id]&&byId[id].namespace)||id;delete byId[id];delete listeners[namespace];sortedListeners=fluid.event.sortListeners(listeners)},fireToListeners:function(listeners,args,wrapper){return fireToListeners(listeners,args,wrapper)},fire:function(){return fireToListeners(sortedListeners,arguments)}};return that};fluid.event.getEventFirer=fluid.makeEventFirer;fluid.fireEvent=function(component,path,args){var firer=fluid.get(component,path);if(firer){firer.fire.apply(null,fluid.makeArray(args))}};fluid.event.addListenerToFirer=function(firer,value,namespace,wrapper){wrapper=wrapper||fluid.identity;if(fluid.isArrayable(value)){for(var i=0;i<value.length;++i){fluid.event.addListenerToFirer(firer,value[i],namespace,wrapper)}}else{if(typeof (value)==="function"||typeof (value)==="string"){wrapper(firer).addListener(value,namespace)}else{if(value&&typeof (value)==="object"){wrapper(firer).addListener(value.listener,namespace||value.namespace,value.predicate,value.priority)}}}};fluid.event.resolveListenerRecord=function(records){return{records:records}};fluid.mergeListeners=function(that,events,listeners){fluid.each(listeners,function(value,key){var firer,namespace;if(key.charAt(0)==="{"){if(!fluid.expandOptions){fluid.fail("fluid.expandOptions could not be loaded - please include FluidIoC.js in order to operate IoC-driven event with descriptor "+key)}firer=fluid.expandOptions(key,that);if(!firer){fluid.fail("Error in listener record: key "+key+' could not be looked up to an event firer - did you miss out "events." when referring to an event firer?')}}else{var keydot=key.indexOf(".");if(keydot!==-1){namespace=key.substring(keydot+1);key=key.substring(0,keydot)}if(!events[key]){fluid.fail("Listener registered for event "+key+" which is not defined for this component");events[key]=fluid.makeEventFirer(null,null,fluid.event.nameEvent(that,key))}firer=events[key]}record=fluid.event.resolveListenerRecord(value,that,key);fluid.event.addListenerToFirer(firer,record.records,namespace,record.adderWrapper)})};fluid.eventFromRecord=function(eventSpec,eventKey,that){var isIoCEvent=eventSpec&&(typeof (eventSpec)!=="string"||eventSpec.charAt(0)==="{");var event;if(isIoCEvent){if(!fluid.event.resolveEvent){fluid.fail("fluid.event.resolveEvent could not be loaded - please include FluidIoC.js in order to operate IoC-driven event with descriptor ",eventSpec)}else{event=fluid.event.resolveEvent(that,eventKey,eventSpec)}}else{event=fluid.makeEventFirer(eventSpec==="unicast",eventSpec==="preventable",fluid.event.nameEvent(that,eventKey))}return event};fluid.instantiateFirers=function(that,options){fluid.each(options.events,function(eventSpec,eventKey){that.events[eventKey]=fluid.eventFromRecord(eventSpec,eventKey,that)})};fluid.mergeListenerPolicy=function(target,source,key){var hasNamespace=key.charAt(0)!=="{"&&key.indexOf(".")!==-1;return hasNamespace?(source?source:target):fluid.makeArray(target).concat(fluid.makeArray(source))};fluid.mergeListenersPolicy=function(target,source){target=target||{};fluid.each(source,function(listeners,key){target[key]=fluid.mergeListenerPolicy(target[key],listeners,key)});return target};fluid.unique=function(array){return fluid.remove_if(array,function(element,i){return !element||i>0&&element===array[i-1]})};fluid.arrayConcatPolicy=function(target,source){return fluid.makeArray(target).concat(fluid.makeArray(source))};fluid.uniqueArrayConcatPolicy=function(target,source){target=(target||[]).concat(source);fluid.unique(target.sort());return target};var gradeTick=1;var gradeTickStore={};var defaultsStore={};var resolveGradesImpl=function(gs,gradeNames){gradeNames=fluid.makeArray(gradeNames);fluid.each(gradeNames,function(gradeName){if(!gs.gradeHash[gradeName]){var options=fluid.rawDefaults(gradeName)||{};var thisTick=gradeTickStore[gradeName]||(gradeTick-1);gs.lastTick=Math.max(gs.lastTick,thisTick);gs.gradeHash[gradeName]=true;gs.gradeChain.push(gradeName);gs.optionsChain.push(options);var oGradeNames=fluid.makeArray(options.gradeNames);fluid.each(oGradeNames,function(gradeName){if(gradeName!=="autoInit"&&gradeName.charAt(0)!=="{"){resolveGradesImpl(gs,gradeName)}})}});return gs};fluid.resolveGradeStructure=function(defaultName,defaultGrades,gradeNames){var gradeStruct={lastTick:0,gradeChain:[defaultName],gradeHash:{},optionsChain:[]};gradeStruct.gradeHash[defaultName]=true;return resolveGradesImpl(gradeStruct,(gradeNames||[]).concat(fluid.makeArray(defaultGrades)))};var mergedDefaultsCache={};fluid.gradeNamesToKey=function(gradeNames,defaultName){return defaultName+"|"+fluid.makeArray(gradeNames).sort().join("|")};fluid.hasGrade=function(options,gradeName){return !options||!options.gradeNames?false:fluid.contains(options.gradeNames,gradeName)};fluid.resolveGrade=function(defaults,defaultName,gradeNames){var mergeArgs=[defaults];var gradeStruct=fluid.resolveGradeStructure(defaultName,defaults&&defaults.gradeNames,gradeNames);mergeArgs=gradeStruct.optionsChain.reverse().concat(mergeArgs).concat({gradeNames:gradeStruct.gradeChain});var mergePolicy={};for(var i=0;i<mergeArgs.length;++i){if(mergeArgs[i]&&mergeArgs[i].mergePolicy){mergePolicy=$.extend(true,mergePolicy,mergeArgs[i].mergePolicy)}}mergeArgs=[mergePolicy,{}].concat(mergeArgs);var mergedDefaults=fluid.merge.apply(null,mergeArgs);if(!fluid.hasGrade(defaults,"autoInit")){fluid.remove_if(mergedDefaults.gradeNames,function(gradeName){return gradeName==="autoInit"})}return{defaults:mergedDefaults,lastTick:gradeStruct&&gradeStruct.lastTick}};fluid.getGradedDefaults=function(defaultName,gradeNames){var key=fluid.gradeNamesToKey(gradeNames,defaultName);var mergedDefaults=mergedDefaultsCache[key];if(mergedDefaults){var lastTick=0;var searchGrades=mergedDefaults.defaults.gradeNames||[];for(var i=0;i<searchGrades.length;++i){lastTick=Math.max(lastTick,gradeTickStore[searchGrades[i]]||0)}if(lastTick>mergedDefaults.lastTick){fluid.log("Clearing cache for component "+defaultName+" with gradeNames ",searchGrades);mergedDefaults=null}}if(!mergedDefaults){var defaults=fluid.rawDefaults(defaultName);if(!defaults){return defaults}mergedDefaults=mergedDefaultsCache[key]=fluid.resolveGrade(defaults,defaultName,gradeNames)}return mergedDefaults.defaults};fluid.rawDefaults=function(componentName,options){if(options===undefined){return defaultsStore[componentName]}else{defaultsStore[componentName]=options;gradeTickStore[componentName]=gradeTick++}};fluid.doIndexDefaults=function(defaultName,defaults,index,indexSpec){var requiredGrades=fluid.makeArray(indexSpec.gradeNames);for(var i=0;i<requiredGrades.length;++i){if(!fluid.hasGrade(defaults,requiredGrades[i])){return }}var indexFunc=typeof (indexSpec.indexFunc)==="function"?indexSpec.indexFunc:fluid.getGlobalValue(indexSpec.indexFunc);var keys=indexFunc(defaults)||[];for(var j=0;j<keys.length;++j){(index[keys[j]]=index[keys[j]]||[]).push(defaultName)}};fluid.indexDefaults=function(indexName,indexSpec){var index={};for(var defaultName in defaultsStore){var defaults=fluid.getGradedDefaults(defaultName);fluid.doIndexDefaults(defaultName,defaults,index,indexSpec)}return index};fluid.defaults=function(componentName,options){if(options===undefined){return fluid.getGradedDefaults(componentName)}else{if(options&&options.options){fluid.fail("Probable error in options structure for "+componentName+' with option named "options" - perhaps you meant to write these options at top level in fluid.defaults? - ',options)}fluid.rawDefaults(componentName,options);if(fluid.hasGrade(options,"autoInit")){fluid.makeComponent(componentName,fluid.getGradedDefaults(componentName))}}};fluid.makeComponent=function(componentName,options){if(!options.initFunction||!options.gradeNames){fluid.fail("Cannot autoInit component "+componentName+" which does not have an initFunction and gradeNames defined")}var creator=function(){return fluid.initComponent(componentName,arguments)};var existing=fluid.getGlobalValue(componentName);if(existing){$.extend(creator,existing)}fluid.setGlobalValue(componentName,creator)};fluid.makeComponents=function(components,env){fluid.each(components,function(value,key){var options={gradeNames:fluid.makeArray(value).concat(["autoInit"])};fluid.defaults(key,options)})};fluid.model.mergeModel=function(target,source){if(!fluid.isPrimitive(target)){var copySource=fluid.copy(source);$.extend(true,source,target);$.extend(true,source,copySource)}return source};var emptyPolicy={};fluid.derefMergePolicy=function(policy){return(policy?policy["*"]:emptyPolicy)||emptyPolicy};fluid.compileMergePolicy=function(mergePolicy){var builtins={},defaultValues={};var togo={builtins:builtins,defaultValues:defaultValues};if(!mergePolicy){return togo}fluid.each(mergePolicy,function(value,key){var parsed={},builtin=false;if(typeof (value)==="function"){parsed.func=value;builtin=true}else{if(!fluid.isDefaultValueMergePolicy(value)){var split=value.split(/\s*,\s*/);for(var i=0;i<split.length;++i){parsed[split[i]]=true}builtin=true}else{fluid.set(defaultValues,key,"{that}.options."+value);togo.hasDefaults=true}}if(builtin){fluid.set(builtins,fluid.composePath(key,"*"),parsed)}});return togo};fluid.isDefaultValueMergePolicy=function(policy){return typeof (policy)==="string"&&(policy.indexOf(",")===-1&&!/replace|preserve|nomerge|noexpand/.test(policy))};fluid.mergeOneImpl=function(thisTarget,thisSource,j,sources,newPolicy,i,segs){var togo=thisTarget;var primitiveTarget=fluid.isPrimitive(thisTarget);if(thisSource!==undefined){if(!newPolicy.func&&thisSource!==null&&typeof (thisSource)==="object"&&!fluid.isDOMish(thisSource)&&thisSource!==fluid.VALUE&&!newPolicy.preserve&&!newPolicy.nomerge){if(primitiveTarget){togo=thisTarget=fluid.freshContainer(thisSource)}}else{sources[j]=undefined;if(newPolicy.func){togo=newPolicy.func.call(null,thisTarget,thisSource,segs[i-1],segs,i)}else{togo=fluid.isValue(thisTarget)&&newPolicy.preserve?fluid.model.mergeModel(thisTarget,thisSource):thisSource}}}return togo};function regenerateCursor(source,segs,limit,sourceStrategy){for(var i=0;i<limit;++i){source=sourceStrategy(source,segs[i],i,segs)}return source}function regenerateSources(sources,segs,limit,sourceStrategies){var togo=[];for(var i=0;i<sources.length;++i){var thisSource=regenerateCursor(sources[i],segs,limit,sourceStrategies[i]);if(thisSource!==undefined){togo.push(thisSource)}}return togo}fluid.fetchMergeChildren=function(target,i,segs,sources,mergePolicy,options){var thisPolicy=fluid.derefMergePolicy(mergePolicy);for(var j=sources.length-1;j>=0;--j){var source=sources[j];if(source!==undefined){fluid.each(source,function(newSource,name){if(!target.hasOwnProperty(name)){segs[i]=name;options.strategy(target,name,i+1,segs,sources,mergePolicy)}});if(thisPolicy.replace){break}}}return target};fluid.inEvaluationMarker={__CURRENTLY_IN_EVALUATION__:true};fluid.strategyRecursionBailout=50;fluid.makeMergeStrategy=function(options){var strategy=function(target,name,i,segs,sources,policy){if(i>fluid.strategyRecursionBailout){fluid.fail("Overflow/circularity in options merging, current path is ",segs," at depth ",i,' - please protect components from merging using the "nomerge" merge policy')}if(fluid.isTracing){fluid.tracing.pathCount.push(fluid.path(segs.slice(0,i)))}var oldTarget=undefined;if(target.hasOwnProperty(name)){oldTarget=target[name];if(!options.evaluateFully){return oldTarget}}else{target[name]=fluid.inEvaluationMarker}if(sources===undefined){segs=fluid.makeArray(segs);sources=regenerateSources(options.sources,segs,i-1,options.sourceStrategies);policy=regenerateCursor(options.mergePolicy,segs,i-1,fluid.concreteTrundler)}var newPolicyHolder=fluid.concreteTrundler(policy,name);var newPolicy=fluid.derefMergePolicy(newPolicyHolder);var start,limit,mul;if(newPolicy.replace){start=1-sources.length;limit=0;mul=-1}else{start=0;limit=sources.length-1;mul=+1}var newSources=[];var thisTarget=undefined;for(var j=start;j<=limit;++j){var k=mul*j;var thisSource=options.sourceStrategies[k](sources[k],name,i,segs);if(thisSource!==undefined){newSources[k]=thisSource;if(oldTarget===undefined){if(mul===-1){thisTarget=target[name]=thisSource;break}else{thisTarget=target[name]=fluid.mergeOneImpl(thisTarget,thisSource,j,newSources,newPolicy,i,segs,options)}}}}if(oldTarget!==undefined){thisTarget=oldTarget}if(newSources.length>0){if(!fluid.isPrimitive(thisTarget)){fluid.fetchMergeChildren(thisTarget,i,segs,newSources,newPolicyHolder,options)}}if(oldTarget===undefined&&newSources.length===0){delete target[name]}return thisTarget};options.strategy=strategy;return strategy};fluid.driveStrategy=function(root,pathSegs,strategy){pathSegs=fluid.makeArray(pathSegs);for(var i=0;i<pathSegs.length;++i){if(!root){return undefined}root=strategy(root,pathSegs[i],i+1,pathSegs)}return root};fluid.concreteTrundler=function(source,seg){return !source?undefined:source[seg]};fluid.merge=function(policy){var sources=Array.prototype.slice.call(arguments,1);var compiled=fluid.compileMergePolicy(policy).builtins;var options=fluid.makeMergeOptions(compiled,sources,{});options.initter();return options.target};fluid.simpleGingerBlock=function(source,recordType){var block={target:source,simple:true,strategy:fluid.concreteTrundler,initter:fluid.identity,recordType:recordType,priority:fluid.mergeRecordTypes[recordType]};return block};fluid.makeMergeOptions=function(policy,sources,userOptions){var options={mergePolicy:policy,sources:sources,seenIds:{}};options=$.extend(options,userOptions);options.target=options.target||fluid.freshContainer(options.sources[0]);options.sourceStrategies=options.sourceStrategies||fluid.generate(options.sources.length,fluid.concreteTrundler);options.initter=function(){options.evaluateFully=true;fluid.fetchMergeChildren(options.target,0,[],options.sources,options.mergePolicy,options)};fluid.makeMergeStrategy(options);return options};fluid.transformOptions=function(options,transRec){fluid.expect("Options transformation record",["transformer","config"],transRec);var transFunc=fluid.getGlobalValue(transRec.transformer);return transFunc.call(null,options,transRec.config)};fluid.findMergeBlocks=function(mergeBlocks,recordType){return fluid.remove_if(fluid.makeArray(mergeBlocks),function(block){return block.recordType!==recordType})};fluid.transformOptionsBlocks=function(mergeBlocks,transformOptions,recordTypes){fluid.each(recordTypes,function(recordType){var blocks=fluid.findMergeBlocks(mergeBlocks,recordType);fluid.each(blocks,function(block){block[block.simple?"target":"source"]=fluid.transformOptions(block.source,transformOptions)})})};fluid.deliverOptionsStrategy=fluid.identity;fluid.computeComponentAccessor=fluid.identity;fluid.computeDynamicComponents=fluid.identity;fluid.mergeRecordTypes={defaults:0,localOptions:50,defaultValueMerge:100,subcomponentRecord:200,distribution:300,user:500,demands:600};fluid.mergeComponentOptions=function(that,componentName,userOptions,localOptions){var rawDefaults=fluid.rawDefaults(componentName);var defaults=fluid.getGradedDefaults(componentName,rawDefaults&&rawDefaults.gradeNames?null:localOptions.gradeNames);var sharedMergePolicy={};var mergeBlocks=[];if(fluid.expandComponentOptions){mergeBlocks=mergeBlocks.concat(fluid.expandComponentOptions(sharedMergePolicy,defaults,userOptions,that))}else{mergeBlocks=mergeBlocks.concat([fluid.simpleGingerBlock(defaults,"defaults"),fluid.simpleGingerBlock(userOptions,"user")])}var options={};var sourceStrategies=[],sources=[];var baseMergeOptions={target:options,sourceStrategies:sourceStrategies};var updateBlocks=function(){mergeBlocks.sort(fluid.priorityComparator);sourceStrategies.length=0;sources.length=0;fluid.each(mergeBlocks,function(block){sourceStrategies.push(block.strategy);sources.push(block.target)})};updateBlocks();var mergeOptions=fluid.makeMergeOptions(sharedMergePolicy,sources,baseMergeOptions);mergeOptions.mergeBlocks=mergeBlocks;mergeOptions.updateBlocks=updateBlocks;var mergePolicy=fluid.driveStrategy(options,"mergePolicy",mergeOptions.strategy);mergePolicy=$.extend({},fluid.rootMergePolicy,mergePolicy);var compiledPolicy=fluid.compileMergePolicy(mergePolicy);$.extend(true,sharedMergePolicy,compiledPolicy.builtins);if(compiledPolicy.hasDefaults){if(fluid.generateExpandBlock){mergeBlocks.push(fluid.generateExpandBlock({options:compiledPolicy.defaultValues,recordType:"defaultValueMerge",priority:fluid.mergeRecordTypes.defaultValueMerge},that,{}));updateBlocks()}else{fluid.fail("Cannot operate mergePolicy ",mergePolicy," for component ",that," without including FluidIoC.js")}}that.options=options;var optionsNickName=fluid.driveStrategy(options,"nickName",mergeOptions.strategy);that.nickName=optionsNickName||fluid.computeNickName(that.typeName);fluid.driveStrategy(options,"gradeNames",mergeOptions.strategy);fluid.deliverOptionsStrategy(that,options,mergeOptions);var transformOptions=fluid.driveStrategy(options,"transformOptions",mergeOptions.strategy);if(transformOptions){fluid.transformOptionsBlocks(mergeBlocks,transformOptions,["user","subcomponentRecord"]);updateBlocks()}fluid.computeComponentAccessor(that);return mergeOptions};fluid.defaults("fluid.function",{});fluid.lifecycleFunctions={preInitFunction:true,postInitFunction:true,finalInitFunction:true};fluid.rootMergePolicy=$.extend({gradeNames:fluid.uniqueArrayConcatPolicy,distributeOptions:fluid.arrayConcatPolicy,transformOptions:"replace"},fluid.transform(fluid.lifecycleFunctions,function(){return fluid.mergeListenerPolicy}));fluid.defaults("fluid.littleComponent",{gradeNames:["autoInit"],initFunction:"fluid.initLittleComponent",mergePolicy:fluid.rootMergePolicy,argumentMap:{options:0}});fluid.defaults("fluid.eventedComponent",{gradeNames:["fluid.littleComponent","autoInit"],events:{onCreate:null,onAttach:null,onClear:null,onDestroy:null},mergePolicy:{listeners:fluid.mergeListenersPolicy}});fluid.preInitModelComponent=function(that){that.model=that.options.model||{};that.applier=that.options.applier||(fluid.makeChangeApplier?fluid.makeChangeApplier(that.model,that.options.changeApplierOptions):null)};fluid.defaults("fluid.modelComponent",{gradeNames:["fluid.littleComponent","autoInit"],preInitFunction:{namespace:"preInitModelComponent",listener:"fluid.preInitModelComponent"},mergePolicy:{model:"preserve",applier:"nomerge"}});fluid.COMPONENT_OPTIONS={type:"fluid.marker",value:"COMPONENT_OPTIONS"};fluid.emptySubcomponent=function(options){var that=fluid.typeTag("fluid.emptySubcomponent");that.options=options||{};that.options.gradeNames=[that.typeName];options=fluid.makeArray(options);for(var i=0;i<options.length;++i){that[options[i]]=fluid.identity}return that};fluid.computeNickName=function(typeName){var segs=fluid.model.parseEL(typeName);return segs[segs.length-1]};fluid.typeTag=function(name){return name?{typeName:name,id:fluid.allocateGuid()}:null};fluid.typeFount=function(options){var that=fluid.initLittleComponent("fluid.typeFount",options);return fluid.typeTag(that.options.targetTypeName)};fluid.initLittleComponent=function(name,userOptions,localOptions,receiver){var that=fluid.typeTag(name);localOptions=localOptions||{gradeNames:"fluid.littleComponent"};var mergeOptions=fluid.mergeComponentOptions(that,name,userOptions,localOptions);var options=that.options;var evented=fluid.hasGrade(options,"fluid.eventedComponent");if(evented){that.events={}}(receiver||fluid.identity)(that,options,mergeOptions.strategy);fluid.computeDynamicComponents(that,mergeOptions);for(var i=0;i<mergeOptions.mergeBlocks.length;++i){mergeOptions.mergeBlocks[i].initter()}mergeOptions.initter();delete options.mergePolicy;fluid.initLifecycleFunctions(that);fluid.fireEvent(options,"preInitFunction",that);if(evented){fluid.instantiateFirers(that,options);fluid.mergeListeners(that,that.events,options.listeners)}if(!fluid.hasGrade(options,"autoInit")){fluid.clearLifecycleFunctions(options)}return that};fluid.updateWithDefaultLifecycle=function(key,value,typeName){var funcName=typeName+"."+key.substring(0,key.length-"function".length);var funcVal=fluid.getGlobalValue(funcName);if(typeof (funcVal)==="function"){value=fluid.makeArray(value);var existing=fluid.find(value,function(el){var listener=el.listener||el;if(listener===funcVal||listener===funcName){return true}});if(!existing){value.push(funcVal)}}return value};fluid.initLifecycleFunctions=function(that){var gradeNames=that.options.gradeNames||[];fluid.each(fluid.lifecycleFunctions,function(func,key){var value=that.options[key];for(var i=gradeNames.length-1;i>=0;--i){if(gradeNames[i]!=="autoInit"){value=fluid.updateWithDefaultLifecycle(key,value,gradeNames[i])}}if(value){that.options[key]=fluid.makeEventFirer(null,null,key);fluid.event.addListenerToFirer(that.options[key],value)}})};fluid.clearLifecycleFunctions=function(options){fluid.each(fluid.lifecycleFunctions,function(value,key){delete options[key]});delete options.initFunction};fluid.diagnoseFailedView=fluid.identity;fluid.makeRootDestroy=function(that){return function(){fluid.fireEvent(that,"events.onClear",[that,"",null]);fluid.fireEvent(that,"events.onDestroy",[that,"",null])}};fluid.resolveReturnedPath=fluid.identity;fluid.initComponent=function(componentName,initArgs){var options=fluid.defaults(componentName);if(!options.gradeNames){fluid.fail("Cannot initialise component "+componentName+" which has no gradeName registered")}var args=[componentName].concat(fluid.makeArray(initArgs));var that;fluid.pushActivity("initComponent","constructing component of type %componentName with arguments %initArgs",{componentName:componentName,initArgs:initArgs});that=fluid.invokeGlobalFunction(options.initFunction,args);fluid.diagnoseFailedView(componentName,that,options,args);fluid.fireEvent(that.options,"postInitFunction",that);if(fluid.initDependents){fluid.initDependents(that)}fluid.fireEvent(that.options,"finalInitFunction",that);fluid.clearLifecycleFunctions(that.options);that.destroy=fluid.makeRootDestroy(that);fluid.fireEvent(that,"events.onCreate",that);fluid.popActivity();return fluid.resolveReturnedPath(that.options.returnedPath,that)?fluid.get(that,that.options.returnedPath):that};fluid.initSubcomponentImpl=function(that,entry,args){var togo;if(typeof (entry)!=="function"){var entryType=typeof (entry)==="string"?entry:entry.type;togo=entryType==="fluid.emptySubcomponent"?fluid.emptySubcomponent(entry.options):fluid.invokeGlobalFunction(entryType,args)}else{togo=entry.apply(null,args)}var returnedOptions=togo?togo.returnedOptions:null;if(returnedOptions&&returnedOptions.listeners){fluid.mergeListeners(that,that.events,returnedOptions.listeners)}return togo};fluid.initSubcomponents=function(that,className,args){var entry=that.options[className];if(!entry){return }var entries=fluid.makeArray(entry);var optindex=-1;var togo=[];args=fluid.makeArray(args);for(var i=0;i<args.length;++i){if(args[i]===fluid.COMPONENT_OPTIONS){optindex=i}}for(i=0;i<entries.length;++i){entry=entries[i];if(optindex!==-1){args[optindex]=entry.options}togo[i]=fluid.initSubcomponentImpl(that,entry,args)}return togo};fluid.initSubcomponent=function(that,className,args){return fluid.initSubcomponents(that,className,args)[0]};fluid.singleThreadLocal=function(initFunc){var value=initFunc();return function(newValue){return newValue===undefined?value:value=newValue}};fluid.threadLocal=fluid.singleThreadLocal;fluid.globalThreadLocal=fluid.threadLocal(function(){return fluid.typeTag("fluid.dynamicEnvironment")});fluid.staticEnvironment=fluid.typeTag("fluid.staticEnvironment");var charStart="(?:[\\w\u00c0-\uFFFF*_-";fluid.simpleCSSMatcher={regexp:new RegExp("([#.]?)("+charStart+"]|\\\\.)+)","g"),charToTag:{"":"tag","#":"id",".":"clazz"}};fluid.IoCSSMatcher={regexp:new RegExp("([&#]?)("+charStart+"]|\\.)+)","g"),charToTag:{"":"context","&":"context","#":"id"}};var childSeg=new RegExp("\\s*(>)?\\s*","g");fluid.parseSelector=function(selstring,strategy){var togo=[];selstring=$.trim(selstring);var regexp=strategy.regexp;regexp.lastIndex=0;var lastIndex=0;while(true){var atNode=[];var first=true;while(true){var segMatch=regexp.exec(selstring);if(!segMatch){break}if(segMatch.index!==lastIndex){if(first){fluid.fail("Error in selector string - cannot match child selector expression starting at "+selstring.substring(lastIndex))}else{break}}var thisNode={};var text=segMatch[2];var targetTag=strategy.charToTag[segMatch[1]];if(targetTag){thisNode[targetTag]=text}atNode[atNode.length]=thisNode;lastIndex=regexp.lastIndex;first=false}childSeg.lastIndex=lastIndex;var fullAtNode={predList:atNode};var childMatch=childSeg.exec(selstring);if(!childMatch||childMatch.index!==lastIndex){fluid.fail("Error in selector string - can not match child selector expression at "+selstring.substring(lastIndex))}if(childMatch[1]===">"){fullAtNode.child=true}togo[togo.length]=fullAtNode;if(childSeg.lastIndex>=selstring.length){break}lastIndex=childSeg.lastIndex;regexp.lastIndex=childSeg.lastIndex}return togo};fluid.stringToRegExp=function(str,flags){return new RegExp(str.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&"),flags)};fluid.stringTemplate=function(template,values){var keys=fluid.keys(values);keys=keys.sort(fluid.compareStringLength());for(var i=0;i<keys.length;++i){var key=keys[i];var re=fluid.stringToRegExp("%"+key,"g");template=template.replace(re,values[key])}return template};fluid.messageResolver=function(options){var that=fluid.initLittleComponent("fluid.messageResolver",options);that.messageBase=that.options.parseFunc(that.options.messageBase);that.lookup=function(messagecodes){var resolved=fluid.messageResolver.resolveOne(that.messageBase,messagecodes);if(resolved===undefined){return fluid.find(that.options.parents,function(parent){return parent?parent.lookup(messagecodes):undefined})}else{return{template:resolved,resolveFunc:that.options.resolveFunc}}};that.resolve=function(messagecodes,args){if(!messagecodes){return"[No messagecodes provided]"}messagecodes=fluid.makeArray(messagecodes);var looked=that.lookup(messagecodes);return looked?looked.resolveFunc(looked.template,args):"[Message string for key "+messagecodes[0]+" not found]"};return that};fluid.defaults("fluid.messageResolver",{mergePolicy:{messageBase:"nomerge",parents:"nomerge"},resolveFunc:fluid.stringTemplate,parseFunc:fluid.identity,messageBase:{},parents:[]});fluid.messageResolver.resolveOne=function(messageBase,messagecodes){for(var i=0;i<messagecodes.length;++i){var code=messagecodes[i];var message=messageBase[code];if(message!==undefined){return message}}};fluid.messageLocator=function(messageBase,resolveFunc){var resolver=fluid.messageResolver({messageBase:messageBase,resolveFunc:resolveFunc});return function(messagecodes,args){return resolver.resolve(messagecodes,args)}}})(jQuery,fluid_1_5);